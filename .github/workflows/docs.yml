name: Docs

on:
  push:
    branches: [ "main", "dev" ]
    # branches: [ "TestWorkflows" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  docs:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: "Install dependencies"
      run: |
        set -x
        sudo apt-get update -y
        sudo apt-get install -y make
        sudo apt-get install -y doxygen
        sudo apt-get install -y texlive-latex-extra --fix-missing
        sudo apt-get install -y wget

    # Step 3: Prepare documentation files
    # This step modifies Markdown files and source files to make them compatible with Doxygen
    - name: "Prepare documentation files"
      run: |
        # Checkout the docs branch
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git fetch
        git checkout gh-pages
        git reset --hard origin/main

        # Copy the Makefile to the working directory
        cp ./doc/examples/Makefile ./

        # Adjust Markdown links for compatibility between GitHub and Doxygen
        for FILE in ./doc/*.md; do
          # Fix relative links to /doc/
          sed -i 's%(/doc/%(doc/%g' $FILE
          # Fix README links
          sed -i 's%(/README%(README%g' $FILE
          # Convert src links to GitHub URLs
          sed -i 's%(/src/%(https://github.com/benroberts999/ampsci/tree/main/src/%g' $FILE
          # Replace custom tags with Doxygen-compatible tags
          sed -i 's%::::%\brief%g' $FILE
        done

        # Adjust LaTeX math delimiters for Doxygen
        for FILE in ./doc/tutorial*.md; do
          # Replace $$~ with \f[
          sed -i -e 's/\$\$~/\\f\[/g' $FILE
          # Replace ~$$ with \f]
          sed -i -e 's/~\$\$/\\f\]/g' $FILE
          # Replace $ with \f$
          sed -i -e 's/\$/\\f\$/g' $FILE
        done

        # Remove non-ASCII characters from header files
        for FILE in ./src/*.h* ./src/*/*.h* ./src/*/*/*.h*; do
          tr -cd '\0-\177' < $FILE > temp && mv temp $FILE
        done

        # Update badges in README.md
        sed -i 's%tests-badge]]%tests-badge-v2]]%g' ./README.md
        sed -i 's%build-badge]]%build-badge-v2]]%g' ./README.md
        sed -i 's%macOS-badge]]%macOS-badge-v2]]%g' ./README.md
        sed -i 's%cov-badge]]%cov-badge-v2]]%g' ./README.md

        # Clean up old documentation artifacts
        rm -rf ./docs/form_*.png
        rm -rf ./docs/formula.repository

    # Step 4a: Build the documentation
    - name: "Build the documentation"
      run: make doxy

    # Step 4b: Fetch badges and extras (can fail)
    - name: "Download images and badges"
      continue-on-error: true
      run: |
        wget https://cdn.mathjax.org/mathjax/latest/MathJax.js -O ./docs/MathJax.js || true
        echo ampsci.dev > ./docs/CNAME
        wget https://github.com/benroberts999/ampsci/actions/workflows/tests.yml/badge.svg -O ./docs/tests-badge.svg || true
        wget https://github.com/benroberts999/ampsci/actions/workflows/build.yml/badge.svg -O ./docs/build-badge.svg || true
        wget https://github.com/benroberts999/ampsci/actions/workflows/macOS.yml/badge.svg -O ./docs/macOS-badge.svg || true
        wget https://img.shields.io/codecov/c/github/benroberts999/ampsci?token=3M5MH5QXLL -O ./docs/cov-badge.svg || true

    # Step 5: Commit and push documentation to gh-pages
    - name: "Commit+push documentation to gh-pages"
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git add .
        git add docs/* -f
        git commit -a -m "Make documentation [GH Actions]"
        git push origin gh-pages -f